name: Packer Build & Share Workflow

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ] 
  workflow_dispatch:

jobs:
  packer-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Package the Application
        run: |
          mvn package -DskipTests
          mkdir -p artifact
          cp target/*.jar artifact/

      - name: Upload JAR File for Packer
        uses: actions/upload-artifact@v4
        with:
          name: myapp-jar
          path: artifact/

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-jar
          path: artifact/

      - name: Install Packer
        uses: hashicorp/setup-packer@main

      - name: Initialize Packer Plugins
        run: packer init packer/ubuntu.pkr.hcl

      
      - name: Configure Github actions Dev user AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: us-east-1

      - name: Test Dev User AWS credentials
        run: aws sts get-caller-identity

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_DEV_SA_KEY }}

      - name: Run Packer to Build & Capture Output
        id: packer_build
        run: |
          packer build -on-error=abort \
            -var "db_username=${{ secrets.CSYE_DB_USERNAME }}" \
            -var "db_password=${{ secrets.CSYE_DB_PASSWORD }}" \
            -var "aws_demo_account_id=${{ secrets.AWS_DEMO_ACCOUNT_ID }}" \
            -var "gcp_demo_project_id=${{ secrets.GCP_DEMO_PROJECT_ID }}" \
            -var-file=packer/variables.pkr.hcl \
            -only="googlecompute.gcp-ubuntu"
            packer/ubuntu.pkr.hcl | tee packer_output.log

      - name: Get Latest Compute Image from GCP
        id: get_gcp_compute_image
        run: |
          GCP_COMPUTE_IMAGE_NAME=$(gcloud compute images list --project=${{ secrets.GCP_DEV_PROJECT_ID }} \
            --filter="name~'webapp-ubuntu-24-04'" \
            --sort-by="~creationTimestamp" \
            --limit=1 \
            --format="value(name)")
          echo "GCP_COMPUTE_IMAGE_NAME=$GCP_COMPUTE_IMAGE_NAME" >> $GITHUB_ENV
          echo "Latest GCP Compute Image Name: $GCP_COMPUTE_IMAGE_NAME"

      - name: Create VM from GCP Compute Image
        id: create_vm
        run: |
          gcloud compute instances create custom-vm-from-image \
            --project=${{ secrets.GCP_DEV_PROJECT_ID }} \
            --zone=us-west2-c \
            --machine-type=n1-standard-1 \
            --image=${{ env.GCP_COMPUTE_IMAGE_NAME }} \

      - name: Create Machine Image from VM
        id: create_machine_image
        run: |
            gcloud compute machine-images create ubuntu-machine-image \
              --source-instance=custom-vm-from-image \
              --source-instance-zone=us-west2-c  \
              --storage-location=us-west2 \
              --project=${{ secrets.GCP_DEV_PROJECT_ID }}

      - name: Share Machine Image with Demo Project
        run: |
            gcloud compute machine-images add-iam-policy-binding ubuntu-machine-image \
                --project=${{ secrets.GCP_DEV_PROJECT_ID }} \
                --member="serviceAccount:${{ secrets.GCP_DEMO_SA_EMAIL }}" \
                --role="roles/compute.imageUser"

      - name: Configure Github actions Demo user AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region: us-east-1


      - name: Test Demo user AWS credentials
        run: aws sts get-caller-identity
          


